name: Code Coverage

on: [pull_request]

jobs:
  base_branch_cov:
    runs-on: ubuntu-latest
    steps:
      # Checkout the code from the base branch
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.base_ref }}

      # Set up JDK 8
      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: '8'       # Specify Java 8
          distribution: 'temurin' # Use Temurin distribution

      # Build the project
      - name: Build the project
        run: ./gradlew build

      # Run tests with coverage and generate the JaCoCo report
      - name: Run tests with coverage
        run: ./gradlew test jacocoTestReport

      # Check if LCOV file exists, create if not
      - name: Check and create LCOV file if not exists
        run: |
          LCOV_FILE="build/reports/jacoco/test/jacocoTestReport.csv"
          # Check if the LCOV file exists
          if [ ! -f "$LCOV_FILE" ]; then
            echo "LCOV file does not exist. Creating a dummy LCOV file."
            # If the LCOV file doesn't exist, create an empty placeholder or dummy file
            echo "Dummy LCOV file content" > "$LCOV_FILE"
          else
            echo "LCOV file exists."
          fi

      # Upload the LCOV report as an artifact
      - name: Upload code coverage artifact
        uses: actions/upload-artifact@v3
        with:
          name: ref-lcov.info
          path: build/reports/jacoco/test/jacocoTestReport.csv  # Ensure the file path is correct

  checks:
    runs-on: ubuntu-latest
    needs: base_branch_cov  # Ensure this job runs after base_branch_cov completes

    steps:
      # Checkout the code from the pull request branch
      - uses: actions/checkout@v3

      # Set up JDK 8
      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: '8'       # Specify Java 8
          distribution: 'temurin' # Use Temurin distribution

      # Download the LCOV report from the base branch
      - name: Download code coverage report from base branch
        uses: actions/download-artifact@v3
        with:
          name: ref-lcov.info

      # Build the project
      - name: Build the project
        run: ./gradlew build

      # Run tests with coverage and generate the JaCoCo report for the PR branch
      - name: Run tests with coverage
        run: ./gradlew test jacocoTestReport

      # Generate the code coverage report and compare it with the base branch's coverage
      - name: Generate Code Coverage report
        id: code-coverage
        uses: barecheck/code-coverage-action@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}  # Use the default GitHub token
          lcov-file: "build/reports/jacoco/test/jacocoTestReport.csv"  # Ensure this matches your JaCoCo output
          base-lcov-file: "ref-lcov.info"
          minimum-ratio: 0  # This can be adjusted based on your requirements
          send-summary-comment: true
          show-annotations: "warning"
